/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */

syntax = "proto3";

package featureform.embedding.proto;

service EmbeddingStore {
  rpc CreateStore(CreateStoreRequest) returns (CreateStoreResponse) {}
  rpc DeleteStore(DeleteStoreRequest) returns (DeleteStoreResponse) {}
  rpc Download(DownloadRequest) returns (stream DownloadResponse) {}
  rpc Upload(stream UploadRequest) returns (UploadResponse) {}
  rpc Set(SetRequest) returns (SetResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc MultiSet(stream MultiSetRequest) returns (MultiSetResponse) {}
  rpc GetNeighbors(GetNeighborsRequest) returns (stream Neighbor) {}
}

message CreateStoreRequest {
  string store_name = 1;
  int64 dimensions = 2;
}

message CreateStoreResponse {
  // Purposely empty.
}

message DeleteStoreRequest {
  string store_name = 1;
}

message DeleteStoreResponse {
  // Purposely empty.
}

message DownloadRequest {
  string store_name = 1;
}

message DownloadResponse {
  bytes chunk = 1;
}

message UploadRequestHeader {
  string store_name = 1;
  bool do_append = 2;
}

message UploadRequest {
  oneof request {
    UploadRequestHeader header = 1;
    bytes chunk = 2;
  }
}

message UploadResponse {
  bytes chunk = 1;
}

message SetRequest {
  string store_name = 1;
  string key = 2;
  Embedding embedding = 3;
}

message SetResponse {
  // Purposely empty.
}

message GetRequest {
  string store_name = 1;
  string key = 2;
}

message GetResponse {
  Embedding embedding = 1;
}

message MultiSetRequest {
  string store_name = 1;
  string key = 2;
  Embedding embedding = 3;
}

message MultiSetResponse {
  // Purposely empty.
}

message Embedding {
  repeated double values = 1;
}

message KeyedEmbedding {
  string key = 1;
  repeated double values = 2;
}

message Neighbor {
  string key = 1;
  double distance = 2;
}

message GetNeighborsRequest {
  string store_name = 1;
  string key = 2;
  int64 number = 3;
}

message TableMetadata {
  string path = 1;
  string name = 2;
  int64 dimensions = 3;
}